import{j as s}from"./jsx-runtime-D_zvdyIk.js";import{r as a}from"./index-D4lIrffr.js";import{a as e,S as b,C as h}from"./const-CDvcHHnW.js";import{a as G}from"./Typography-CTIxwUAP.js";import{I as q}from"./Icon-UUnYs5kp.js";import{R as F}from"./FlexContainers-DNoJS9Qw.js";import{B as L}from"./Button-BjaLCak2.js";import"./Text-BwXo1EDq.js";import"./Flex-B1ZRMfrz.js";const W="_toast-container_12e4p_1",$="_icon-close_12e4p_18",K="_fixed-position_12e4p_24",H="_danger_12e4p_30",X="_success_12e4p_34",J="_warning_12e4p_38",Q="_info_12e4p_42",V="_size-s_12e4p_46",Y="_icon-status_12e4p_50",ee="_size-m_12e4p_54",se="_fade-out_12e4p_62",o={"toast-container":"_toast-container_12e4p_1",toastContainer:W,"icon-close":"_icon-close_12e4p_18",iconClose:$,"fixed-position":"_fixed-position_12e4p_24",fixedPosition:K,danger:H,success:X,warning:J,info:Q,"size-s":"_size-s_12e4p_46",sizeS:V,"icon-status":"_icon-status_12e4p_50",iconStatus:Y,"size-m":"_size-m_12e4p_54",sizeM:ee,"fade-out":"_fade-out_12e4p_62",fadeOut:se},l=t=>{const{className:g,children:c,id:T,status:d=e.INFO,debugMode:k,onClose:S,size:C=b.S,fixedPosition:M=!0,automaticClose:I=!0,isOpen:u=!1,...U}=t;k&&console.log(`Toast ${T}`,t);const m=a.useRef(null),[Z,N]=a.useState(u),[_,E]=a.useState(!1),f=a.useCallback(()=>{_||(E(!0),setTimeout(()=>{N(!1),S&&S()},500))},[_,S]);a.useEffect(()=>(N(u),E(!1),I&&u&&(m.current=setTimeout(()=>{f()},5e3)),()=>{m.current&&(clearTimeout(m.current),m.current=null)}),[u,I,f]);let p="faCircleInfo";switch(d){case e.SUCCESS:p="faCircleCheck";break;case e.WARNING:p="faTriangleExclamation";break;case e.DANGER:p="faTriangleExclamation";break;case e.INFO:p="faCircleInfo";break}const x=h[`${d}200`]||h.textMuted,B=["gp-toast-container",o["toast-container"],d&&o[d],C&&o[`size-${C}`],M&&o["fixed-position"],_?o["fade-out"]:"",g].filter(Boolean).join(" ");return Z&&s.jsxs("div",{className:B,id:T,role:d===e.DANGER?"alert":"status","data-testid":T,...U,children:[s.jsx(q,{iconName:p,color:x,className:o["icon-status"],"aria-hidden":"true",focusable:"false"}),s.jsxs(F,{justify:"space-between",flex:1,children:[s.jsx(G,{tag:typeof c=="string"?"p":"div",color:x,weight:"600",style:{lineHeight:1},children:c}),s.jsx(q,{iconName:"faXmark",color:x,onClick:f,className:o["icon-close"],role:"button",tabIndex:0,"aria-label":"Close Icon",onKeyDown:y=>{(y.key==="Enter"||y.key===" ")&&(y.preventDefault(),f())}})]})]})};l.displayName="Toast";l.__docgenInfo={description:"",methods:[],displayName:"Toast",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""},debugMode:{required:!1,tsType:{name:"boolean"},description:""},id:{required:!1,tsType:{name:"string"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},status:{required:!1,tsType:{name:"STATUS"},description:""},size:{required:!1,tsType:{name:"Extract",elements:[{name:"SIZES"},{name:"union",raw:'"m" | "s"',elements:[{name:"literal",value:'"m"'},{name:"literal",value:'"s"'}]}],raw:'Extract<SIZES, "m" | "s">'},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},fixedPosition:{required:!1,tsType:{name:"boolean"},description:""},automaticClose:{required:!1,tsType:{name:"boolean"},description:""}}};const pe={title:"Base Components/Toast",component:l,tags:["autodocs"],argTypes:{automaticClose:{control:"boolean",description:"Se `true`, il toast si chiuder√† automaticamente dopo 5 secondi."},children:{control:"text",description:"Il contenuto del messaggio, che pu√≤ essere un nodo React o una stringa."},className:{control:"text",description:"Imposta una classe CSS personalizzata."},debugMode:{control:"boolean",description:"Se `true`, mostra nel log della console le propriet√† passate al componente."},fixedPosition:{control:"boolean",description:"Se `true`, il toast rimarr√† in position fixed in alto a destra dello schermo."},id:{control:"text",description:"Imposta l'ID del messaggio di toast."},isOpen:{control:"boolean",description:"Indica se il toast √® aperto o chiuso. Controllato dall'esterno."},size:{control:"select",options:[b.M,b.S],description:"Imposta la dimensione del toast."},status:{control:"select",options:[e.DANGER,e.SUCCESS,e.INFO,e.WARNING],description:"Definisce lo stato del messaggio e determina il suo stile e l'icona corrispondente."}},parameters:{docs:{description:{component:'\nIl componente **Toast** √® un messaggio di supporto composto da un testo e un\'icona, il cui stile varia in base allo `status`.\n\n‚û°Ô∏è **La prop `isOpen` gestita esternamente √® obbligatoria per gestire correttamente l\'apertura e la chiusura del toast**. <br>\n‚û°Ô∏è **La prop `onClose` √® obbligatoria per settare correttamente l\'apertura e la chiusura automatica del toast.**\n\n####‚ö†Ô∏è **NB:** Di default la prop  `fixedPosition` √® la props `automaticClose` sono **true**, ma √® settata a false negli elementi delle storie per gestire meglio la documentazione.\n\n\n## ‚ôøÔ∏è Accessibilit√†\n- `role="status"` e `role="alert"` impostato di default al div del messaggio a seconda dello status del messaggio\n- `aria-hidden="true"` e `focusable="false"` impostati di default all\'icona\n- `role="button"`, `tabIndex={0}` e `aria-label="Close Icon"` impostato di default all\'icona di chiusura\n- `onKeyDown` impostato di default all\'icona di chiusura per gestire l\'evento di chiusura al tasto "Enter" o "Space"\n\n\n## üìå Esempio\n```jsx\n<Toast isOpen={open} onClose={() => setOpen(false)}>Toast message</Toast>\n```\n\n## üîß Propriet√†\n\n- **automaticClose** *(boolean, opzionale)*: Se `true`, il toast si chiuder√† automaticamente dopo 5 secondi. Default: `true`.\n- **children** *(ReactNode, obbligatorio)*: Il contenuto del messaggio.\n- **className** *(string, opzionale)*: Imposta una classe CSS personalizzata.\n- **debugMode** *(boolean, opzionale)*: Se `true`, mostra nel log della console le propriet√† passate al componente.\n- **fixedPosition** *(boolean, opzionale)*: Se `true`, il toast rimarr√† in position fixed in alto a destra dello schermo. Default: `true`.\n- **id** *(string, opzionale)*: Imposta l\'ID del messaggio di toast.\n- **isOpen** *(boolean, obbligatorio)*: Indica se il toast √® aperto o chiuso. Controllato dall\'esterno.\n- **onClose** *(function, obbligatorio)*: Funzione da chiamare quando il toast deve essere chiuso. Controllata dall\'esterno.\n- **size** *(string, opzionale)*: Imposta la dimensione del toast. Default: `SIZES.S`.  I valori sono documentati [qui](?path=/docs/foundations-constants--docs). Pu√≤ essere:\n  - `SIZES.S`\n  - `SIZES.M`\n- **status** *(string, opzionale)*: Definisce lo stato del messaggio e determina il suo stile e l\'icona corrispondente. Pu√≤ assumere uno dei seguenti valori documentati [qui](?path=/docs/foundations-constants--docs):\n  - `STATUS.DANGER`\n  - `STATUS.SUCCESS`\n  - `STATUS.INFO`\n  - `STATUS.WARNING`\n        '}}}},i=({...t})=>s.jsx(l,{...t,isOpen:!0,fixedPosition:!1,automaticClose:!1});i.args={children:"Toast message"};const n=({...t})=>s.jsx(l,{...t,isOpen:!0,fixedPosition:!1,automaticClose:!1});n.args={children:"Error message",status:e.DANGER};const r=({...t})=>{const[g,c]=a.useState(!1);return s.jsxs(s.Fragment,{children:[s.jsx(L,{onClick:()=>c(!0),children:"Trigger for open Toast"}),s.jsx(l,{...t,fixedPosition:!1,isOpen:g,onClose:()=>c(!1),className:"gp-mt-16"})]})};r.args={children:"Toast with an external open and an automatic close"};i.__docgenInfo={description:"",methods:[],displayName:"Default",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""},debugMode:{required:!1,tsType:{name:"boolean"},description:""},id:{required:!1,tsType:{name:"string"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},status:{required:!1,tsType:{name:"STATUS"},description:""},size:{required:!1,tsType:{name:"Extract",elements:[{name:"SIZES"},{name:"union",raw:'"m" | "s"',elements:[{name:"literal",value:'"m"'},{name:"literal",value:'"s"'}]}],raw:'Extract<SIZES, "m" | "s">'},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},fixedPosition:{required:!1,tsType:{name:"boolean"},description:""},automaticClose:{required:!1,tsType:{name:"boolean"},description:""}}};n.__docgenInfo={description:"",methods:[],displayName:"ErrorStatus",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""},debugMode:{required:!1,tsType:{name:"boolean"},description:""},id:{required:!1,tsType:{name:"string"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},status:{required:!1,tsType:{name:"STATUS"},description:""},size:{required:!1,tsType:{name:"Extract",elements:[{name:"SIZES"},{name:"union",raw:'"m" | "s"',elements:[{name:"literal",value:'"m"'},{name:"literal",value:'"s"'}]}],raw:'Extract<SIZES, "m" | "s">'},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},fixedPosition:{required:!1,tsType:{name:"boolean"},description:""},automaticClose:{required:!1,tsType:{name:"boolean"},description:""}}};r.__docgenInfo={description:"",methods:[],displayName:"ExternalOpen",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""},debugMode:{required:!1,tsType:{name:"boolean"},description:""},id:{required:!1,tsType:{name:"string"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},status:{required:!1,tsType:{name:"STATUS"},description:""},size:{required:!1,tsType:{name:"Extract",elements:[{name:"SIZES"},{name:"union",raw:'"m" | "s"',elements:[{name:"literal",value:'"m"'},{name:"literal",value:'"s"'}]}],raw:'Extract<SIZES, "m" | "s">'},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},fixedPosition:{required:!1,tsType:{name:"boolean"},description:""},automaticClose:{required:!1,tsType:{name:"boolean"},description:""}}};var O,R,z;i.parameters={...i.parameters,docs:{...(O=i.parameters)==null?void 0:O.docs,source:{originalSource:`({
  ...args
}: ToastProps) => <Toast {...args} isOpen={true} fixedPosition={false} automaticClose={false} />`,...(z=(R=i.parameters)==null?void 0:R.docs)==null?void 0:z.source}}};var w,v,P;n.parameters={...n.parameters,docs:{...(w=n.parameters)==null?void 0:w.docs,source:{originalSource:`({
  ...args
}: ToastProps) => <Toast {...args} isOpen={true} fixedPosition={false} automaticClose={false} />`,...(P=(v=n.parameters)==null?void 0:v.docs)==null?void 0:P.source}}};var D,A,j;r.parameters={...r.parameters,docs:{...(D=r.parameters)==null?void 0:D.docs,source:{originalSource:`({
  ...args
}: ToastProps) => {
  const [open, setOpen] = useState(false);
  return <>
      <Button onClick={() => setOpen(true)}>Trigger for open Toast</Button>
      <Toast {...args} fixedPosition={false} isOpen={open} onClose={() => setOpen(false)} className="gp-mt-16" />
    </>;
}`,...(j=(A=r.parameters)==null?void 0:A.docs)==null?void 0:j.source}}};const ue=["Default","ErrorStatus","ExternalOpen"];export{i as Default,n as ErrorStatus,r as ExternalOpen,ue as __namedExportsOrder,pe as default};
